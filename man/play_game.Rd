% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/montyhall.R
\name{play_game}
\alias{play_game}
\title{Play Game Function}
\usage{
play_game()
}
\arguments{
\item{To}{start play_game() the variable \code{new.game} is created using the function
create_game(). The next variable created is \code{first.pick}. \code{first.pick}
uses the function select_door() and simulates the initial door choice
of the player. After the initial choice is made, the variable
\code{opened.door} is introduced using the function open_goat_door(). The
variables \code{new.game} and \code{first.pick} are passed through the function
open_goat_door() to ensure that the door opened by this function is
not equal to the door chosen by the contestant and not equal to a car
door. The next variables in this function are \code{final.pick.stay} and
\code{final.pick.switch}. These variables represent the player's choice
of staying with their initial choice \code{first.pick} or switching to
the third door. In \code{final.pick.stay} the player chooses not to switch
and in \code{final.pick.stay}, the player chooses to switch. This decision
is then passed through the next variable \code{strategy}. The next variable
is \code{outcome}. The play_game() function compares outcomes using both
strategies, "stay" and "switch".  This allows the function to decide
which strategy is more effective at winning. The variable \code{game.results}
is the final variable determined by the play_game() function.}
}
\value{
The variable \code{game.results} is a data frame returned by the function
play_game(). The results are a single character vector that indicate
"WIN" or "LOSE".
}
\description{
The \code{play_game()} function combines all the steps described above
into a single function to play one round of the game.
}
\details{
This function allows the user to simulate game play through the use
of a single function as described in the parameters below. Each
simulation is the equivalent of one round of the game.
}
\examples{
  play_game()

}
